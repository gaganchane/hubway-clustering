20/(20+3)
# Accuracy
(171+3)/(171+3+20+8)
# Part 2 - Question 2 b)
# Baseline Model False Positive Rate
0/(0+23)
# Baseline Model False Negative Rate
23/(23+0)
# Baseline Model Accuracy
(202-23)/202
# Part 2 - Question 4
#install.packages("ROCR")
library(ROCR)
ROCRpred <- prediction(PredictParole, testing.data$Violator)
performance(ROCRpred, measure = "auc")
ROCRperf <- performance(ROCRpred, "tpr", "fpr")
plot(ROCRperf, colorize = TRUE)
boxplot(training.data2$Age~training.data2$Violator.Worded, main="Boxplot of Age Based on Violators and Non-Violators", xlab="Violator", ylab="Age")
ggplot(data=training.data2, aes(x=Violator.Worded, fill=State)) + geom_bar(stat="count", position="dodge")+labs(title="Histogram of Violators and Non-Violators in Each State", x ="Violator or Non-Violator", y = "Occurences") + theme(plot.title = element_text(hjust = 0.5))
# Part 1 - Question 2
# install.packages("ggplot")
library(ggplot2)
training.data2 <- training.data
training.data2$Violator.Worded <- ifelse(training.data2$Violator == 0, "Non Violator", "Violator")
training.data2$Gender <- ifelse(training.data2$Male == 1, "Male", "Female")
training.data2$Race <- ifelse(training.data2$RaceWhite == 1, "White", "Non White")
ggplot(training.data2,aes(Violator.Worded))+geom_histogram(fill="grey",colour="black", stat="count")+labs(title="Histogram of Violators and Non-Violators", x ="Violator or Non-Violator", y = "Occurences") + theme(plot.title = element_text(hjust = 0.5))
boxplot(training.data2$Age~training.data2$Violator.Worded, main="Boxplot of Age Based on Violators and Non-Violators", xlab="Violator", ylab="Age")
ggplot(data=training.data2, aes(x=Violator.Worded, fill=State)) + geom_bar(stat="count", position="dodge")+labs(title="Histogram of Violators and Non-Violators in Each State", x ="Violator or Non-Violator", y = "Occurences") + theme(plot.title = element_text(hjust = 0.5))
ggplot(data=training.data2, aes(x=Violator.Worded, fill=Crime)) + geom_bar(stat="count", position="dodge")+labs(title="Histogram of Violators and Non-Violators for Each Crime", x ="Violator or Non-Violator", y = "Occurences") + theme(plot.title = element_text(hjust = 0.5))
ggplot(data=training.data2, aes(x=Violator.Worded, fill=Gender)) + geom_bar(stat="count", position="dodge")+labs(title="Histogram of Violators and Non-Violators for Each Gender", x ="Violator or Non-Violator", y = "Occurences") + theme(plot.title = element_text(hjust = 0.5))
ggplot(data=training.data2, aes(x=Violator.Worded, fill=Race)) + geom_bar(stat="count", position="dodge")+labs(title="Histogram of Violators and Non-Violators for Whites and Non-Whites", x ="Violator or Non-Violator", y = "Occurences") + theme(plot.title = element_text(hjust = 0.5))
# Part 1 - Question 2
# install.packages("ggplot")
library(ggplot2)
training.data2 <- training.data
training.data2$Violator.Worded <- ifelse(training.data2$Violator == 0, "Non Violator", "Violator")
training.data2$Gender <- ifelse(training.data2$Male == 1, "Male", "Female")
training.data2$Race <- ifelse(training.data2$RaceWhite == 1, "White", "Non White")
#ggplot(training.data2,aes(Violator.Worded))+geom_histogram(fill="grey",colour="black", stat="count")+labs(title="Histogram of Violators and Non-Violators", x ="Violator or Non-Violator", y = "Occurences") + theme(plot.title = element_text(hjust = 0.5))
boxplot(training.data2$Age~training.data2$Violator.Worded, main="Boxplot of Age Based on Violators and Non-Violators", xlab="Violator", ylab="Age")
ggplot(data=training.data2, aes(x=Violator.Worded, fill=State)) + geom_bar(stat="count", position="dodge")+labs(title="Histogram of Violators and Non-Violators in Each State", x ="Violator or Non-Violator", y = "Occurences") + theme(plot.title = element_text(hjust = 0.5))
ggplot(data=training.data2, aes(x=Violator.Worded, fill=Crime)) + geom_bar(stat="count", position="dodge")+labs(title="Histogram of Violators and Non-Violators for Each Crime", x ="Violator or Non-Violator", y = "Occurences") + theme(plot.title = element_text(hjust = 0.5))
ggplot(data=training.data2, aes(x=Violator.Worded, fill=Gender)) + geom_bar(stat="count", position="dodge")+labs(title="Histogram of Violators and Non-Violators for Each Gender", x ="Violator or Non-Violator", y = "Occurences") + theme(plot.title = element_text(hjust = 0.5))
ggplot(data=training.data2, aes(x=Violator.Worded, fill=Race)) + geom_bar(stat="count", position="dodge")+labs(title="Histogram of Violators and Non-Violators for Whites and Non-Whites", x ="Violator or Non-Violator", y = "Occurences") + theme(plot.title = element_text(hjust = 0.5))
ggplot(training.data2,aes(Violator.Worded))+geom_histogram(fill="grey",colour="black", stat="count")+labs(title="Histogram of Violators and Non-Violators", x ="Violator or Non-Violator", y = "Occurences") + theme(plot.title = element_text(hjust = 0.5))
# Part 1 - Question 2
# install.packages("ggplot")
library(ggplot2)
training.data2 <- training.data
training.data2$Violator.Worded <- ifelse(training.data2$Violator == 0, "Non Violator", "Violator")
training.data2$Gender <- ifelse(training.data2$Male == 1, "Male", "Female")
training.data2$Race <- ifelse(training.data2$RaceWhite == 1, "White", "Non White")
ggplot(training.data2,aes(Violator.Worded))+geom_bar(fill="grey",colour="black", stat="count")+labs(title="Histogram of Violators and Non-Violators", x ="Violator or Non-Violator", y = "Occurences") + theme(plot.title = element_text(hjust = 0.5))
boxplot(training.data2$Age~training.data2$Violator.Worded, main="Boxplot of Age Based on Violators and Non-Violators", xlab="Violator", ylab="Age")
ggplot(data=training.data2, aes(x=Violator.Worded, fill=State)) + geom_bar(stat="count", position="dodge")+labs(title="Histogram of Violators and Non-Violators in Each State", x ="Violator or Non-Violator", y = "Occurences") + theme(plot.title = element_text(hjust = 0.5))
ggplot(data=training.data2, aes(x=Violator.Worded, fill=Crime)) + geom_bar(stat="count", position="dodge")+labs(title="Histogram of Violators and Non-Violators for Each Crime", x ="Violator or Non-Violator", y = "Occurences") + theme(plot.title = element_text(hjust = 0.5))
ggplot(data=training.data2, aes(x=Violator.Worded, fill=Gender)) + geom_bar(stat="count", position="dodge")+labs(title="Histogram of Violators and Non-Violators for Each Gender", x ="Violator or Non-Violator", y = "Occurences") + theme(plot.title = element_text(hjust = 0.5))
ggplot(data=training.data2, aes(x=Violator.Worded, fill=Race)) + geom_bar(stat="count", position="dodge")+labs(title="Histogram of Violators and Non-Violators for Whites and Non-Whites", x ="Violator or Non-Violator", y = "Occurences") + theme(plot.title = element_text(hjust = 0.5))
knitr::opts_knit$set(root.dir = '/Users/mbr/Desktop/4B/MSCI 433/assignment 1')
#install.packages("caTools")
library(caTools)
data <- read.csv("Parole.csv")
#View(data)
set.seed(0711)
data$is.training <- sample.split(data$Violator, SplitRatio= 0.7)
training.data <- subset(data, data$is.training == TRUE)
#View(training.data)
testing.data <- subset(data, data$is.training == FALSE)
# Part 1 - Question 1
summary(training.data)
# Part 1 - Question 2
# install.packages("ggplot")
library(ggplot2)
training.data2 <- training.data
training.data2$Violator.Worded <- ifelse(training.data2$Violator == 0, "Non Violator", "Violator")
training.data2$Gender <- ifelse(training.data2$Male == 1, "Male", "Female")
training.data2$Race <- ifelse(training.data2$RaceWhite == 1, "White", "Non White")
ggplot(training.data2,aes(Violator.Worded))+geom_bar(fill="grey",colour="black", stat="count")+labs(title="Histogram of Violators and Non-Violators", x ="Violator or Non-Violator", y = "Occurences") + theme(plot.title = element_text(hjust = 0.5))
boxplot(training.data2$Age~training.data2$Violator.Worded, main="Boxplot of Age Based on Violators and Non-Violators", xlab="Violator", ylab="Age")
ggplot(data=training.data2, aes(x=Violator.Worded, fill=State)) + geom_bar(stat="count", position="dodge")+labs(title="Histogram of Violators and Non-Violators in Each State", x ="Violator or Non-Violator", y = "Occurences") + theme(plot.title = element_text(hjust = 0.5))
ggplot(data=training.data2, aes(x=Violator.Worded, fill=Crime)) + geom_bar(stat="count", position="dodge")+labs(title="Histogram of Violators and Non-Violators for Each Crime", x ="Violator or Non-Violator", y = "Occurences") + theme(plot.title = element_text(hjust = 0.5))
ggplot(data=training.data2, aes(x=Violator.Worded, fill=Gender)) + geom_bar(stat="count", position="dodge")+labs(title="Histogram of Violators and Non-Violators for Each Gender", x ="Violator or Non-Violator", y = "Occurences") + theme(plot.title = element_text(hjust = 0.5))
ggplot(data=training.data2, aes(x=Violator.Worded, fill=Race)) + geom_bar(stat="count", position="dodge")+labs(title="Histogram of Violators and Non-Violators for Whites and Non-Whites", x ="Violator or Non-Violator", y = "Occurences") + theme(plot.title = element_text(hjust = 0.5))
# Part 2 - Question 1
ParoleLog <- glm(Violator~Male+RaceWhite+Age+State+TimeServed+MaxSentence+MultipleOffenses+Crime, data=training.data, family=binomial)
summary(ParoleLog)
# Part 2 - Question 1 b)
predict(ParoleLog, newdata=list(Male=1, RaceWhite=1, Age=50, State="Other", TimeServed=3, MaxSentence=12, MultipleOffenses=0, Crime="Larceny"), type = "response")
# Part 2 - Question 2
# Make a predict object
PredictParole <- predict(ParoleLog, newdata=testing.data, type="response")
# Confusion matrix
table(testing.data$Violator, PredictParole>0.5)
# Part 2 - Question 2 a)
# False Positive rate
8/(8+171)
# False Negative rate
20/(20+3)
# Accuracy
(171+3)/(171+3+20+8)
# Part 2 - Question 2 b)
# Baseline Model False Positive Rate
0/(0+23)
# Baseline Model False Negative Rate
23/(23+0)
# Baseline Model Accuracy
(202-23)/202
# Part 2 - Question 4
#install.packages("ROCR")
library(ROCR)
ROCRpred <- prediction(PredictParole, testing.data$Violator)
performance(ROCRpred, measure = "auc")
ROCRperf <- performance(ROCRpred, "tpr", "fpr")
plot(ROCRperf, colorize = TRUE)
mydata <- subset(data, data$split == TRUE)
setwd("/Users/mbr/Desktop/4B/MSCI 433/assignment 2/")
library(caTools)
library(caret)
data <- read.csv("HubwayTrips.csv")
set.seed(0711)
data$split <- sample.split(data$Male, SplitRatio = 0.05)
mydata <- subset(data, data$split == TRUE)
rownames(mydata) <- seq(length=nrow(mydata))
mydata <- mydata[,-10]
### Part 1 - General Statistics ###
nrow(mydata)
summary(mydata)
### Part 1 - Data Visualization ###
vis.data <- mydata
vis.data$Period
for(i in 1:nrow(vis.data)){
if(vis.data[i, "Morning"] == 1){
vis.data[i, "Period"] <- "Morning"
} else if(vis.data[i, "Afternoon"] == 1){
vis.data[i, "Period"] <- "Afternoon"
} else if(vis.data[i, "Evening"] == 1){
vis.data[i, "Period"] <- "Evening"
} else {
vis.data[i, "Period"] <- "Night"
}
}
vis.data$WeekdayWeekend
for(i in 1:nrow(vis.data)){
if(vis.data[i, "Weekday"] == 1){
vis.data[i, "WeekdayWeekend"] <- "Weekday"
} else {
vis.data[i, "WeekdayWeekend"] <- "Weekend"
}
}
vis.data$Gender
for(i in 1:nrow(vis.data)){
if(vis.data[i, "Male"] == 1){
vis.data[i, "Gender"] <- "Male"
} else {
vis.data[i, "Gender"] <- "Female"
}
}
vis.data <- subset(vis.data, select = -c(Morning, Afternoon, Evening, Night, Weekday, Weekend, Male))
ggplot(data=vis.data, aes(x=Gender, fill=Period)) + geom_bar(stat="count", position="dodge")+
labs(title="Histogram of Trips During Different Periods per Gender ", x ="Gender", y = "Occurences")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data=vis.data, aes(x=WeekdayWeekend, fill=Period)) + geom_bar(stat="count", position="dodge")+
labs(title="Histogram of Trips Weekday and Weekend split by Period", x ="Weekday or Weekend", y = "Occurences")+
theme(plot.title = element_text(hjust = 0.5))
boxplot(vis.data$Age~vis.data$Period, main="Boxplot of Age Based on Period of the Day of Trips",
xlab="Period", ylab="Age", outline = FALSE)
boxplot(vis.data$Duration~vis.data$Period, main="Boxplot of Duration Based on Period of the Day",
xlab="Period", ylab="Duration", outline = FALSE)
ggplot(vis.data,aes(Age))+geom_bar(fill="grey",colour="black", stat="count")+
labs(title="Age Distribution", x ="Age", y = "Occurences")+
theme(plot.title = element_text(hjust = 0.5))
### Part 2 - Cluster Analysis ###
# Data Normalization
preproc <- preProcess(mydata)
normData <- predict(preproc, mydata)
#### HIERARCHICAL CLUSTERING ####
distances1 <- dist(normData, method="euclidean")
set.seed(0711)
Hclusters1 <- hclust(distances1, method="ward.D")
plot(Hclusters1, main = "Cluster Dendrogram - ward.D Method")
set.seed(0711)
Hclusters2 <- hclust(distances1, method="centroid")
plot(Hclusters2, main = "Cluster Dendrogram - Centroid Method")
set.seed(0711)
Hclusters3 <- hclust(distances1, method="average")
plot(Hclusters3, main = "Cluster Dendrogram - Average Method")
set.seed(0711)
Hclusters4 <- hclust(distances1, method="single")
plot(Hclusters4, main = "Cluster Dendrogram - Single Method")
set.seed(0711)
Hclusters5 <- hclust(distances1, method="complete")
plot(Hclusters5, main = "Cluster Dendrogram - Complete Method")
set.seed(0711)
Hclusters6 <- hclust(distances1, method="median")
plot(Hclusters6, main = "Cluster Dendrogram - Median Method")
rect.hclust(Hclusters1,k=5,border="red")
clusterCut1 <- cutree(Hclusters1, 6)
table(clusterCut1)
hclust_sum <- table(mydata$Male,clusterCut1)
hclust_sum
tapply(mydata$Duration, clusterCut1, mean)
tapply(mydata$Morning, clusterCut1, mean)
tapply(mydata$Afternoon, clusterCut1, mean)
tapply(mydata$Evening, clusterCut1, mean)
tapply(mydata$Night, clusterCut1, mean)
tapply(mydata$Weekday, clusterCut1, mean)
tapply(mydata$Weekend, clusterCut1, mean)
tapply(mydata$Male, clusterCut1, mean)
tapply(mydata$Age, clusterCut1, mean)
#### KMEANS CLUSTERING ####
# KMeans with 10 clusters
library(cluster)
set.seed(0711)
KmeansClustering <- kmeans(normData, centers=10,nstart=25)
table(KmeansClustering$cluster)
tapply(mydata$Duration, KmeansClustering$cluster, mean)
tapply(mydata$Morning, KmeansClustering$cluster, mean)
tapply(mydata$Afternoon, KmeansClustering$cluster, mean)
tapply(mydata$Evening, KmeansClustering$cluster, mean)
tapply(mydata$Night, KmeansClustering$cluster, mean)
tapply(mydata$Weekday, KmeansClustering$cluster, mean)
tapply(mydata$Weekend, KmeansClustering$cluster, mean)
tapply(mydata$Male, KmeansClustering$cluster, mean)
tapply(mydata$Age, KmeansClustering$cluster, mean)
# Elbow Curve
# Source: https://www.r-bloggers.com/finding-optimal-number-of-clusters/
wss <- sapply(1:40, function(k){kmeans(normData, k, nstart=25,iter.max = 40 )$tot.withinss})
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE, main = "Plot of # Clusters vs. tot.withinss",
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares")
# KMeans with 6 clusters
library(cluster)
set.seed(0711)
KmeansClustering <- kmeans(normData, centers=6,nstart=25)
table(KmeansClustering$cluster)
tapply(mydata$Duration, KmeansClustering$cluster, mean)
tapply(mydata$Morning, KmeansClustering$cluster, mean)
tapply(mydata$Afternoon, KmeansClustering$cluster, mean)
tapply(mydata$Evening, KmeansClustering$cluster, mean)
tapply(mydata$Night, KmeansClustering$cluster, mean)
tapply(mydata$Weekday, KmeansClustering$cluster, mean)
tapply(mydata$Weekend, KmeansClustering$cluster, mean)
tapply(mydata$Male, KmeansClustering$cluster, mean)
tapply(mydata$Age, KmeansClustering$cluster, mean)
setwd("/Users/mbr/Desktop/4B/MSCI 433/assignment 2/")
library(caTools)
library(caret)
data <- read.csv("HubwayTrips.csv")
set.seed(0711)
data$split <- sample.split(data$Male, SplitRatio = 0.05)
mydata <- subset(data, data$split == TRUE)
rownames(mydata) <- seq(length=nrow(mydata))
mydata <- mydata[,-10]
nrow(mydata)
summary(mydata)
vis.data <- mydata
vis.data$Period
for(i in 1:nrow(vis.data)){
if(vis.data[i, "Morning"] == 1){
vis.data[i, "Period"] <- "Morning"
} else if(vis.data[i, "Afternoon"] == 1){
vis.data[i, "Period"] <- "Afternoon"
} else if(vis.data[i, "Evening"] == 1){
vis.data[i, "Period"] <- "Evening"
} else {
vis.data[i, "Period"] <- "Night"
}
}
setwd("/Users/mbr/Desktop/hubway-clustering/")
library(caTools)
library(caret)
data <- read.csv("hubwaytrips.csv")
set.seed(0711)
data$split <- sample.split(data$Male, SplitRatio = 0.05)
setwd("/Users/mbr/Desktop/hubway-clustering/")
library(caTools)
library(caret)
data <- read.csv("hubwaytrips.csv")
set.seed(0711)
data$split <- sample.split(data$Male, SplitRatio = 0.05)
mydata <- subset(data, data$split == TRUE)
rownames(mydata) <- seq(length=nrow(mydata))
mydata <- mydata[,-10]
head(mydata)
nrow(mydata)
summary(mydata)
vis.data <- mydata
vis.data$Period
for(i in 1:nrow(vis.data)){
if(vis.data[i, "Morning"] == 1){
vis.data[i, "Period"] <- "Morning"
} else if(vis.data[i, "Afternoon"] == 1){
vis.data[i, "Period"] <- "Afternoon"
} else if(vis.data[i, "Evening"] == 1){
vis.data[i, "Period"] <- "Evening"
} else {
vis.data[i, "Period"] <- "Night"
}
}
vis.data$WeekdayWeekend
for(i in 1:nrow(vis.data)){
if(vis.data[i, "Weekday"] == 1){
vis.data[i, "WeekdayWeekend"] <- "Weekday"
} else {
vis.data[i, "WeekdayWeekend"] <- "Weekend"
}
}
vis.data$Gender
for(i in 1:nrow(vis.data)){
if(vis.data[i, "Male"] == 1){
vis.data[i, "Gender"] <- "Male"
} else {
vis.data[i, "Gender"] <- "Female"
}
}
vis.data <- subset(vis.data, select = -c(Morning, Afternoon, Evening, Night, Weekday, Weekend, Male))
ggplot(data=vis.data, aes(x=Gender, fill=Period)) + geom_bar(stat="count", position="dodge")+
labs(title="Histogram of Trips During Different Periods per Gender ", x ="Gender", y = "Occurences")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data=vis.data, aes(x=WeekdayWeekend, fill=Period)) + geom_bar(stat="count", position="dodge")+
labs(title="Histogram of Trips Weekday and Weekend split by Period", x ="Weekday or Weekend", y = "Occurences")+
theme(plot.title = element_text(hjust = 0.5))
boxplot(vis.data$Age~vis.data$Period, main="Boxplot of Age Based on Period of the Day of Trips",
xlab="Period", ylab="Age", outline = FALSE)
boxplot(vis.data$Duration~vis.data$Period, main="Boxplot of Duration Based on Period of the Day",
xlab="Period", ylab="Duration", outline = FALSE)
ggplot(vis.data,aes(Age))+geom_bar(fill="grey",colour="black", stat="count")+
labs(title="Age Distribution", x ="Age", y = "Occurences")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data=vis.data, aes(x=Gender, fill=Period)) + geom_bar(stat="count", position="dodge")+
labs(title="Histogram of Trips During Different Periods per Gender ", x ="Gender", y = "Occurences")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data=vis.data, aes(x=WeekdayWeekend, fill=Period)) + geom_bar(stat="count", position="dodge")+
labs(title="Histogram of Trips Weekday and Weekend split by Period", x ="Weekday or Weekend", y = "Occurences")+
theme(plot.title = element_text(hjust = 0.5))
boxplot(vis.data$Age~vis.data$Period, main="Boxplot of Age Based on Period of the Day of Trips",
xlab="Period", ylab="Age", outline = FALSE)
ggplot(vis.data,aes(Age))+geom_bar(fill="grey",colour="black", stat="count")+
labs(title="Age Distribution", x ="Age", y = "Occurences")+
theme(plot.title = element_text(hjust = 0.5))
nrow(data)
setwd("/Users/mbr/Desktop/hubway-clustering/")
library(caTools)
library(caret)
data <- read.csv("hubwaytrips.csv")
# Analysis only conducted on 5% of data
set.seed(0711)
data$split <- sample.split(data$Male, SplitRatio = 0.05)
mydata <- subset(data, data$split == TRUE)
rownames(mydata) <- seq(length=nrow(mydata))
mydata <- mydata[,-10]
### Data Visualization ###
vis.data <- mydata
# Create column to show time of day instead of a binary flag
vis.data$Period
for(i in 1:nrow(vis.data)){
if(vis.data[i, "Morning"] == 1){
vis.data[i, "Period"] <- "Morning"
} else if(vis.data[i, "Afternoon"] == 1){
vis.data[i, "Period"] <- "Afternoon"
} else if(vis.data[i, "Evening"] == 1){
vis.data[i, "Period"] <- "Evening"
} else {
vis.data[i, "Period"] <- "Night"
}
}
# Create column to show weekday or weekend instead of a binary flag
vis.data$WeekdayWeekend
for(i in 1:nrow(vis.data)){
if(vis.data[i, "Weekday"] == 1){
vis.data[i, "WeekdayWeekend"] <- "Weekday"
} else {
vis.data[i, "WeekdayWeekend"] <- "Weekend"
}
}
# Create column to show gender instead of a binary flag
vis.data$Gender
for(i in 1:nrow(vis.data)){
if(vis.data[i, "Male"] == 1){
vis.data[i, "Gender"] <- "Male"
} else {
vis.data[i, "Gender"] <- "Female"
}
}
# Remove all columns showing flags
vis.data <- subset(vis.data, select = -c(Morning, Afternoon, Evening, Night, Weekday, Weekend, Male))
# Histogram of trips during different periods of day per Gender
ggplot(data=vis.data, aes(x=Gender, fill=Period)) + geom_bar(stat="count", position="dodge")+
labs(title="Histogram of Trips During Different Periods per Gender ", x ="Gender", y = "Occurences")+
theme(plot.title = element_text(hjust = 0.5))
# Histogram of trips during different periods of day per weekday or weekend
ggplot(data=vis.data, aes(x=WeekdayWeekend, fill=Period)) + geom_bar(stat="count", position="dodge")+
labs(title="Histogram of Trips Weekday and Weekend split by Period", x ="Weekday or Weekend", y = "Occurences")+
theme(plot.title = element_text(hjust = 0.5))
# Boxplot of age based on period of the day of trips
boxplot(vis.data$Age~vis.data$Period, main="Boxplot of Age Based on Period of the Day of Trips",
xlab="Period", ylab="Age", outline = FALSE)
# Age distribution
ggplot(vis.data,aes(Age))+geom_bar(fill="grey",colour="black", stat="count")+
labs(title="Age Distribution", x ="Age", y = "Occurences")+
theme(plot.title = element_text(hjust = 0.5))
setwd("/Users/mbr/Desktop/hubway-clustering/")
library(caTools)
library(caret)
data <- read.csv("hubwaytrips.csv")
# Analysis only conducted on 5% of data
set.seed(0711)
data$split <- sample.split(data$Male, SplitRatio = 0.05)
mydata <- subset(data, data$split == TRUE)
rownames(mydata) <- seq(length=nrow(mydata))
mydata <- mydata[,-10]
### Data Visualization ###
vis.data <- mydata
# Create column to show time of day instead of a binary flag
vis.data$Period
for(i in 1:nrow(vis.data)){
if(vis.data[i, "Morning"] == 1){
vis.data[i, "Period"] <- "Morning"
} else if(vis.data[i, "Afternoon"] == 1){
vis.data[i, "Period"] <- "Afternoon"
} else if(vis.data[i, "Evening"] == 1){
vis.data[i, "Period"] <- "Evening"
} else {
vis.data[i, "Period"] <- "Night"
}
}
# Create column to show weekday or weekend instead of a binary flag
vis.data$WeekdayWeekend
for(i in 1:nrow(vis.data)){
if(vis.data[i, "Weekday"] == 1){
vis.data[i, "WeekdayWeekend"] <- "Weekday"
} else {
vis.data[i, "WeekdayWeekend"] <- "Weekend"
}
}
# Create column to show gender instead of a binary flag
vis.data$Gender
for(i in 1:nrow(vis.data)){
if(vis.data[i, "Male"] == 1){
vis.data[i, "Gender"] <- "Male"
} else {
vis.data[i, "Gender"] <- "Female"
}
}
# Remove all columns showing flags
vis.data <- subset(vis.data, select = -c(Morning, Afternoon, Evening, Night, Weekday, Weekend, Male))
# Histogram of trips during different periods of day per Gender
ggplot(data=vis.data, aes(x=Gender, fill=Period)) + geom_bar(stat="count", position="dodge")+
labs(title="Histogram of Trips During Different Periods per Gender ", x ="Gender", y = "Occurences")+
theme(plot.title = element_text(hjust = 0.5))
# Histogram of trips during different periods of day per weekday or weekend
ggplot(data=vis.data, aes(x=WeekdayWeekend, fill=Period)) + geom_bar(stat="count", position="dodge")+
labs(title="Histogram of Trips Weekday and Weekend split by Period", x ="Weekday or Weekend", y = "Occurences")+
theme(plot.title = element_text(hjust = 0.5))
# Boxplot of age based on period of the day of trips
boxplot(vis.data$Age~vis.data$Period, main="Boxplot of Age Based on Period of the Day of Trips",
xlab="Period", ylab="Age", outline = FALSE)
# Age distribution
ggplot(vis.data,aes(Age))+geom_bar(fill="grey",colour="black", stat="count")+
labs(title="Age Distribution", x ="Age", y = "Occurences")+
theme(plot.title = element_text(hjust = 0.5))
setwd("/Users/mbr/Desktop/hubway-clustering/")
library(caTools)
library(caret)
data <- read.csv("hubwaytrips.csv")
# Analysis only conducted on 5% of data
set.seed(0711)
data$split <- sample.split(data$Male, SplitRatio = 0.05)
mydata <- subset(data, data$split == TRUE)
rownames(mydata) <- seq(length=nrow(mydata))
mydata <- mydata[,-10]
### Cluster Analysis ###
# Data Normalization
preproc <- preProcess(mydata)
normData <- predict(preproc, mydata)
#### HIERARCHICAL CLUSTERING ####
distances1 <- dist(normData, method="euclidean")
set.seed(0711)
Hclusters1 <- hclust(distances1, method="ward.D")
plot(Hclusters1, main = "Cluster Dendrogram - ward.D Method")
set.seed(0711)
Hclusters2 <- hclust(distances1, method="centroid")
plot(Hclusters2, main = "Cluster Dendrogram - Centroid Method")
set.seed(0711)
Hclusters3 <- hclust(distances1, method="average")
plot(Hclusters3, main = "Cluster Dendrogram - Average Method")
set.seed(0711)
Hclusters4 <- hclust(distances1, method="single")
plot(Hclusters4, main = "Cluster Dendrogram - Single Method")
set.seed(0711)
Hclusters5 <- hclust(distances1, method="complete")
plot(Hclusters5, main = "Cluster Dendrogram - Complete Method")
set.seed(0711)
Hclusters6 <- hclust(distances1, method="median")
plot(Hclusters6, main = "Cluster Dendrogram - Median Method")
rect.hclust(Hclusters1,k=5,border="red")
clusterCut1 <- cutree(Hclusters1, 6)
table(clusterCut1)
hclust_sum <- table(mydata$Male,clusterCut1)
hclust_sum
tapply(mydata$Duration, clusterCut1, mean)
tapply(mydata$Morning, clusterCut1, mean)
tapply(mydata$Afternoon, clusterCut1, mean)
tapply(mydata$Evening, clusterCut1, mean)
tapply(mydata$Night, clusterCut1, mean)
tapply(mydata$Weekday, clusterCut1, mean)
tapply(mydata$Weekend, clusterCut1, mean)
tapply(mydata$Male, clusterCut1, mean)
tapply(mydata$Age, clusterCut1, mean)
plot(Hclusters1, main = "Cluster Dendrogram - ward.D Method")
